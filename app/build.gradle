apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    signingConfigs {
        release
    }

    defaultConfig {
        applicationId "com.mac.velad"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 2
        versionName "0.0.2"
        manifestPlaceholders = [HOCKEYAPP_APP_ID: "b3b8a67b202e4722b89e55f3e425a43f"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support:design:25.1.1'
    compile 'com.android.support:support-v4:25.1.1'
    compile 'com.android.support:cardview-v7:25.1.1'
    compile 'com.android.support:recyclerview-v7:25.1.1'
    compile 'com.github.dkharrat.nexusdialog:nexusdialog:0.3.0'
    compile 'com.bignerdranch.android:recyclerview-multiselect:0.2'
    compile 'net.hockeyapp.android:HockeySDK:3.7.1'
}

//Code from: https://www.thoughtworks.com/de/insights/blog/signing-open-source-android-apps-without-disclosing-passwords

def props = new Properties()
def file = rootProject.file("release.properties.sample")
props.load(new FileInputStream(file))
android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword
